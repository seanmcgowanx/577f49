{"ast":null,"code":"var _jsxFileName = \"/Users/seanmcgowan/Desktop/journey-builder/src/components/PrefillPanel.tsx\";\nimport React from 'react';\nimport Switch from '@mui/material/Switch';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrefillPanel = ({\n  handleClose,\n  selectedNode,\n  handleConfigure,\n  nodeFieldsMappings,\n  prefillMappings,\n  handleDeleteMapping,\n  formPrefillToggles,\n  handlePrefillToggle\n}) => {\n  var _nodeFieldsMappings$f;\n  const selectedNodeFields = ((_nodeFieldsMappings$f = nodeFieldsMappings.find(mapping => mapping.nodeId === selectedNode.id)) === null || _nodeFieldsMappings$f === void 0 ? void 0 : _nodeFieldsMappings$f.fields) || [];\n  const isPrefillEnabled = formPrefillToggles[selectedNode.data.label];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prefill-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      \"data-testid\": \"prefill-title\",\n      children: [selectedNode.data.label, \" Prefill Configuration\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Prefill fields for this form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checked: isPrefillEnabled,\n      onChange: () => handlePrefillToggle(selectedNode.data.label)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-fields\",\n      children: selectedNodeFields.length > 0 && isPrefillEnabled ? selectedNodeFields.map(field => {\n        const mapping = prefillMappings === null || prefillMappings === void 0 ? void 0 : prefillMappings.find(m => m.targetNodeId === selectedNode.data.label && m.targetFieldName === field);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Field: \", field]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: mapping ? `${mapping.sourceNodeId}: ${mapping.sourceFieldName}` : '[Not configured]'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), mapping ? /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginLeft: '10px'\n              },\n              onClick: () => handleDeleteMapping(field),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginLeft: '10px'\n              },\n              onClick: () => handleConfigure(field),\n              children: \"Configure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No fields available for configuration.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '20px'\n      },\n      onClick: handleClose,\n      children: \"Close Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = PrefillPanel;\nexport default PrefillPanel;\nvar _c;\n$RefreshReg$(_c, \"PrefillPanel\");","map":{"version":3,"names":["React","Switch","jsxDEV","_jsxDEV","PrefillPanel","handleClose","selectedNode","handleConfigure","nodeFieldsMappings","prefillMappings","handleDeleteMapping","formPrefillToggles","handlePrefillToggle","_nodeFieldsMappings$f","selectedNodeFields","find","mapping","nodeId","id","fields","isPrefillEnabled","data","label","className","children","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","length","map","field","m","targetNodeId","targetFieldName","style","marginBottom","sourceNodeId","sourceFieldName","marginLeft","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/seanmcgowan/Desktop/journey-builder/src/components/PrefillPanel.tsx"],"sourcesContent":["import React from 'react';\nimport type { Node } from '@xyflow/react';\nimport Switch from '@mui/material/Switch';\nimport '../App.css';\nimport { CustomNodeData, NodeFieldMapping, PrefillMapping } from '../types';\n\ntype PrefillPanelProps = {\n  handleClose: () => void;\n  selectedNode: Node<CustomNodeData>;\n  handleConfigure: (field: string) => void;\n  nodeFieldsMappings: NodeFieldMapping[];\n  prefillMappings: PrefillMapping[] | null;\n  handleDeleteMapping: (field: string) => void;\n  formPrefillToggles: { [key: string]: boolean };\n  handlePrefillToggle: (nodeLabel: string) => void;\n};\n\nconst PrefillPanel = ({\n  handleClose,\n  selectedNode,\n  handleConfigure,\n  nodeFieldsMappings,\n  prefillMappings,\n  handleDeleteMapping,\n  formPrefillToggles,\n  handlePrefillToggle,\n}: PrefillPanelProps) => {\n  const selectedNodeFields =\n    nodeFieldsMappings.find((mapping) => mapping.nodeId === selectedNode.id)?.fields || [];\n\n  const isPrefillEnabled = formPrefillToggles[selectedNode.data.label];\n\n  return (\n    <div className=\"prefill-panel\">\n      <h3 data-testid=\"prefill-title\">{selectedNode.data.label} Prefill Configuration</h3>\n      <span>Prefill fields for this form</span>\n      <Switch checked={isPrefillEnabled} onChange={() => handlePrefillToggle(selectedNode.data.label)} />\n\n      <div className=\"form-fields\">\n        {selectedNodeFields.length > 0 && isPrefillEnabled ? (\n          selectedNodeFields.map((field) => {\n            const mapping = prefillMappings?.find(\n              (m) => m.targetNodeId === selectedNode.data.label && m.targetFieldName === field\n            );\n\n            return (\n              <div key={field} style={{ marginBottom: '10px' }}>\n                <strong>Field: {field}</strong>\n                <div>\n                  <span>\n                    {mapping ? `${mapping.sourceNodeId}: ${mapping.sourceFieldName}` : '[Not configured]'}\n                  </span>\n                  {mapping ? (\n                    <button style={{ marginLeft: '10px' }} onClick={() => handleDeleteMapping(field)}>\n                      X\n                    </button>\n                  ) : (\n                    <button style={{ marginLeft: '10px' }} onClick={() => handleConfigure(field)}>\n                      Configure\n                    </button>\n                  )}\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <p>No fields available for configuration.</p>\n        )}\n      </div>\n\n      <button style={{ marginTop: '20px' }} onClick={handleClose}>\n        Close Panel\n      </button>\n    </div>\n  );\n};\n\nexport default PrefillPanel;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}